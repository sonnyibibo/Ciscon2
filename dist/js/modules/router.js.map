{"version":3,"file":"router.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_classCallCheck","_defineProperties","key","_createClass","_toPrimitive","toPrimitive","String","Number","Router","options","undefined","linkSelector","animationDuration","loadingClass","activeClass","pageCache","onBeforePageLoad","onAfterPageLoad","underConstructionPaths","body","document","contentContainer","getElementById","console","error","isTransitioning","currentPath","window","location","pathname","startsWith","substring","init","addEventListener","handleLinkClick","bind","handlePopState","cacheCurrentPage","updateActiveLinks","checkUnderConstruction","link","target","closest","metaKey","ctrlKey","shiftKey","altKey","href","getAttribute","preventDefault","navigateTo","state","path","isUnderConstruction","normalizedPath","includes","log","concat","resolvePath","depth","split","prefix","currentDir","lastIndexOf","_navigateTo","_callee2","_this","pushState","pageContent","_args2","_callee2$","_context2","classList","add","getPage","fadeOut","_callee","_callee$","_context","updateContent","history","fadeIn","remove","t0","_x","_getPage","_callee3","response","html","parser","doc","content","_response","_html","_parser","_doc","_content","_callee3$","_context3","fetch","ok","warn","text","DOMParser","parseFromString","innerHTML","status","statusText","t1","_x2","executeScripts","container","scripts","querySelectorAll","oldScript","newScript","createElement","Array","from","attributes","attr","setAttribute","textContent","parentNode","replaceChild","_this2","element","callback","style","opacity","offsetWidth","transition","setTimeout","prefetchPages","paths","_this3","isArray","prefetchPromise","priority","enablePrefetchOnHover","_this4"],"sources":["router.js"],"sourcesContent":["/**\n * Router Module\n * A lightweight client-side router using the History API\n * Provides SPA-like experience with smooth transitions between pages\n */\n\nclass Router {\n    constructor(options = {}) {\n        // Default options\n        this.options = {\n            linkSelector: 'a:not([target=\"_blank\"]):not([href^=\"http\"]):not([href^=\"#\"]):not([href^=\"mailto:\"]):not([href^=\"tel:\"]):not([data-no-route])',\n            animationDuration: 300,\n            loadingClass: 'page-loading',\n            activeClass: 'active',\n            pageCache: {},\n            onBeforePageLoad: null,\n            onAfterPageLoad: null,\n            ...options\n        };\n\n        // Under construction paths - without leading slash to match actual paths\n        this.underConstructionPaths = [\n            'sitemap.html',\n            'news.html',\n            'careers.html'\n        ];\n\n        // DOM elements\n        this.body = document.body;\n        this.contentContainer = document.getElementById('main-content');\n\n        if (!this.contentContainer) {\n            console.error('Router: No content container with id \"main-content\" found.');\n            return;\n        }\n\n        // State\n        this.isTransitioning = false;\n        this.currentPath = window.location.pathname;\n\n        // If we're on the root, set the path to index.html\n        if (this.currentPath === '/') {\n            this.currentPath = 'index.html';\n        } else if (this.currentPath.startsWith('/')) {\n            // Remove leading slash if present\n            this.currentPath = this.currentPath.substring(1);\n        }\n\n        // Initialize\n        this.init();\n    }\n\n    /**\n     * Initialize the router\n     */\n    init() {\n        // Listen for link clicks\n        document.addEventListener('click', this.handleLinkClick.bind(this));\n\n        // Listen for popstate events (browser back/forward)\n        window.addEventListener('popstate', this.handlePopState.bind(this));\n\n        // Cache the initial page\n        this.cacheCurrentPage();\n\n        // Set active links for current page\n        this.updateActiveLinks();\n\n        // Check if current page is under construction\n        this.checkUnderConstruction(this.currentPath);\n    }\n\n    /**\n     * Handle link clicks\n     * @param {Event} e - Click event\n     */\n    handleLinkClick(e) {\n        // Find if the clicked element is a link or within a link\n        const link = e.target.closest(this.options.linkSelector);\n\n        if (!link) return;\n\n        // Don't handle if modifier keys are pressed\n        if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey) return;\n\n        // Get the URL from the link\n        const href = link.getAttribute('href');\n\n        // Skip if this is a hash link on the current page\n        if (href.startsWith('#') || href === '') return;\n\n        // Only handle relative URLs\n        if (href.startsWith('http') || href.startsWith('//')) return;\n\n        // Prevent default link behavior\n        e.preventDefault();\n\n        // Navigate to the new page\n        this.navigateTo(href);\n    }\n\n    /**\n     * Handle browser back/forward navigation\n     * @param {Event} e - Popstate event\n     */\n    handlePopState(e) {\n        if (e.state && e.state.path) {\n            this.navigateTo(e.state.path, false);\n        }\n    }\n\n    /**\n     * Check if path should redirect to under construction\n     * @param {string} path - The path to check\n     * @returns {boolean} - True if path is under construction\n     */\n    isUnderConstruction(path) {\n        // Remove leading slash if present for comparison\n        const normalizedPath = path.startsWith('/') ? path.substring(1) : path;\n        return this.underConstructionPaths.includes(normalizedPath);\n    }\n\n    /**\n     * Check and redirect to under construction if needed\n     * @param {string} path - The path to check\n     */\n    checkUnderConstruction(path) {\n        if (this.isUnderConstruction(path) && path !== 'under-construction.html') {\n            console.log(`Path ${path} is under construction, redirecting...`);\n            this.navigateTo('under-construction.html');\n            return true;\n        }\n        return false;\n    }\n\n    /**\n * Resolve a relative path based on the current page path\n * @param {string} path - The path to resolve\n * @returns {string} - The resolved path\n */\n    resolvePath(path) {\n        // If the path already starts with a slash, convert to relative (for consistency)\n        if (path.startsWith('/')) {\n            return './' + path.substring(1);\n        }\n\n        // If it starts with ./ or ../, it's base-relative\n        if (path.startsWith('./')) {\n            // If we're in a subdirectory\n            if (this.currentPath.includes('/')) {\n                // Get the subdirectory depth\n                const depth = this.currentPath.split('/').length - 1;\n\n                // Add ../ prefix for each level deep we are\n                let prefix = '';\n                for (let i = 0; i < depth; i++) {\n                    prefix += '../';\n                }\n\n                return prefix + path.substring(2);\n            }\n\n            return path;\n        }\n\n        // Otherwise, resolve relative to current path\n        const currentDir = this.currentPath.includes('/')\n            ? this.currentPath.substring(0, this.currentPath.lastIndexOf('/') + 1)\n            : '';\n\n        return currentDir + path;\n    }\n\n    /**\n     * Navigate to a new page\n     * @param {string} path - The path to navigate to\n     * @param {boolean} pushState - Whether to push a new browser history state\n     */\n    async navigateTo(path, pushState = true) {\n\n        path = this.resolvePath(path);\n\n\n        // Check if path is under construction and redirect if needed\n        if (this.checkUnderConstruction(path)) {\n            return;\n        }\n\n\n\n        // Don't navigate if we're already on this page\n        if (this.currentPath === path) return;\n\n        // Don't navigate if a transition is in progress\n        if (this.isTransitioning) return;\n\n        // Set transitioning flag\n        this.isTransitioning = true;\n\n        // Add loading class to body\n        this.body.classList.add(this.options.loadingClass);\n\n        // Call the before load callback if provided\n        if (typeof this.options.onBeforePageLoad === 'function') {\n            this.options.onBeforePageLoad(this.currentPath, path);\n        }\n\n        try {\n            // Get the page content\n            const pageContent = await this.getPage(path);\n\n            // Fade out current content\n            this.fadeOut(this.contentContainer, async () => {\n                // Update the content container with new content\n                this.updateContent(pageContent);\n\n                // Update the browser history\n                if (pushState) {\n                    window.history.pushState({ path }, '', path);\n                }\n\n                // Update the current path\n                this.currentPath = path;\n\n                // Update active links\n                this.updateActiveLinks();\n\n                // Fade in new content\n                this.fadeIn(this.contentContainer, () => {\n                    // Reset transitioning flag\n                    this.isTransitioning = false;\n\n                    // Remove loading class from body\n                    this.body.classList.remove(this.options.loadingClass);\n\n                    // Call the after load callback if provided\n                    if (typeof this.options.onAfterPageLoad === 'function') {\n                        this.options.onAfterPageLoad(path);\n                    }\n                });\n            });\n        } catch (error) {\n            console.error('Router: Navigation error:', error);\n\n            // Fallback to traditional navigation on error\n            window.location.href = path;\n        }\n    }\n\n    /**\n     * Get page content, either from cache or by fetching it\n     * @param {string} path - The path to get\n     * @returns {Promise<string>} - The page content\n     */\n    async getPage(path) {\n        // Check if the page is in cache\n        if (this.options.pageCache[path]) {\n            return this.options.pageCache[path];\n        }\n\n        // Special handling for under construction page\n        if (path === 'under-construction.html') {\n            try {\n                const response = await fetch(path);\n\n                if (!response.ok) {\n                    // If under-construction.html doesn't exist, check if we're in development mode\n                    console.warn('Under construction page not found, redirecting to index.html');\n                    return this.getPage('index.html');\n                }\n\n                const html = await response.text();\n\n                // Extract the content container from the fetched HTML\n                const parser = new DOMParser();\n                const doc = parser.parseFromString(html, 'text/html');\n                const content = doc.getElementById('main-content').innerHTML;\n\n                // Cache the content\n                this.options.pageCache[path] = content;\n\n                return content;\n            } catch (error) {\n                console.error('Router: Unable to fetch under construction page:', error);\n                return this.getPage('index.html');\n            }\n        }\n\n        // Fetch the page\n        try {\n            const response = await fetch(path);\n\n            if (!response.ok) {\n                throw new Error(`Failed to fetch page: ${response.status} ${response.statusText}`);\n            }\n\n            const html = await response.text();\n\n            // Extract the content container from the fetched HTML\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(html, 'text/html');\n            const content = doc.getElementById('main-content').innerHTML;\n\n            // Cache the content\n            this.options.pageCache[path] = content;\n\n            return content;\n        } catch (error) {\n            console.error('Router: Fetch error:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Update the content container with new content\n     * @param {string} content - The new content\n     */\n    updateContent(content) {\n        // Update the content container\n        this.contentContainer.innerHTML = content;\n\n        // Run scripts in the new content\n        this.executeScripts(this.contentContainer);\n    }\n\n    /**\n     * Execute scripts in the new content\n     * @param {HTMLElement} container - The content container\n     */\n    executeScripts(container) {\n        // Find all script tags in the new content\n        const scripts = container.querySelectorAll('script');\n\n        scripts.forEach(oldScript => {\n            const newScript = document.createElement('script');\n\n            // Copy all attributes\n            Array.from(oldScript.attributes).forEach(attr => {\n                newScript.setAttribute(attr.name, attr.value);\n            });\n\n            // Copy the script content\n            newScript.textContent = oldScript.textContent;\n\n            // Replace the old script with the new one\n            oldScript.parentNode.replaceChild(newScript, oldScript);\n        });\n    }\n\n    /**\n     * Update active links based on current path\n     */\n    updateActiveLinks() {\n        // Remove active class from all links\n        document.querySelectorAll(this.options.linkSelector).forEach(link => {\n            link.classList.remove(this.options.activeClass);\n        });\n\n        // Add active class to links matching the current path\n        document.querySelectorAll(`${this.options.linkSelector}[href=\"${this.currentPath}\"]`).forEach(link => {\n            link.classList.add(this.options.activeClass);\n        });\n    }\n\n    /**\n     * Cache the current page\n     */\n    cacheCurrentPage() {\n        // Get the current content\n        const content = this.contentContainer.innerHTML;\n\n        // Cache it\n        this.options.pageCache[this.currentPath] = content;\n    }\n\n    /**\n     * Fade out an element\n     * @param {HTMLElement} element - The element to fade out\n     * @param {Function} callback - Callback to run after fade out\n     */\n    fadeOut(element, callback) {\n        element.style.opacity = '1';\n\n        // Trigger a reflow to ensure the initial opacity is applied\n        void element.offsetWidth;\n\n        element.style.transition = `opacity ${this.options.animationDuration}ms ease`;\n        element.style.opacity = '0';\n\n        setTimeout(() => {\n            if (typeof callback === 'function') {\n                callback();\n            }\n        }, this.options.animationDuration);\n    }\n\n    /**\n     * Fade in an element\n     * @param {HTMLElement} element - The element to fade in\n     * @param {Function} callback - Callback to run after fade in\n     */\n    fadeIn(element, callback) {\n        element.style.opacity = '0';\n\n        // Trigger a reflow to ensure the initial opacity is applied\n        void element.offsetWidth;\n\n        element.style.transition = `opacity ${this.options.animationDuration}ms ease`;\n        element.style.opacity = '1';\n\n        setTimeout(() => {\n            if (typeof callback === 'function') {\n                callback();\n            }\n        }, this.options.animationDuration);\n    }\n\n    /**\n     * Prefetch pages for faster navigation\n     * @param {string[]} paths - Array of paths to prefetch\n     */\n    prefetchPages(paths) {\n        if (!Array.isArray(paths)) return;\n\n        paths.forEach(path => {\n            // Only prefetch if not already in cache and not under construction\n            if (!this.options.pageCache[path] && !this.isUnderConstruction(path)) {\n                // Use a low-priority fetch to not impact current page performance\n                const prefetchPromise = fetch(path, { priority: 'low' })\n                    .then(response => response.text())\n                    .then(html => {\n                        const parser = new DOMParser();\n                        const doc = parser.parseFromString(html, 'text/html');\n                        const content = doc.getElementById('main-content').innerHTML;\n\n                        // Cache the content\n                        this.options.pageCache[path] = content;\n                    })\n                    .catch(error => {\n                        console.warn(`Router: Failed to prefetch ${path}:`, error);\n                    });\n            }\n        });\n    }\n\n    /**\n     * Prefetch pages on link hover for instant navigation\n     */\n    enablePrefetchOnHover() {\n        document.addEventListener('mouseover', e => {\n            const link = e.target.closest(this.options.linkSelector);\n\n            if (!link) return;\n\n            const href = link.getAttribute('href');\n\n            // Skip if this is a hash link, external link, etc.\n            if (\n                !href ||\n                href.startsWith('#') ||\n                href.startsWith('http') ||\n                href.startsWith('//') ||\n                href.startsWith('mailto:') ||\n                href.startsWith('tel:') ||\n                this.isUnderConstruction(href)\n            ) {\n                return;\n            }\n\n            // Prefetch this page if not already in cache\n            if (!this.options.pageCache[href]) {\n                this.prefetchPages([href]);\n            }\n        });\n    }\n}\n\nexport default Router;"],"mappings":"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","ignoreList":[]}